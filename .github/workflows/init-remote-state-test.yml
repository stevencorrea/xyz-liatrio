name: 'Test Init Remote State'

on:
  push:
    branches: [ "main" ]
    paths: 
      - "init-remote-state/*.tf"
      - "!init-remote-state/README.md"
  pull_request:
    branches: [ "main" ]
    paths: 
      - "init-remote-state/*.tf"
      - "!init-remote-state/README.md"


permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform Init/Plan/Apply'
    runs-on: ubuntu-latest
    environment: test

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: 'init-remote-state'

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Configure AWS Creds for terraform plan/apply
    # TODO: Create role and use OIDC provider for optimal security
    # https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: us-west-2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
